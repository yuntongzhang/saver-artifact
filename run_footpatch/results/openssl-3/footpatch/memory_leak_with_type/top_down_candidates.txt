===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$2 != 0 ;  @f$1 != 0 ;  UND<context_deinit>:243(@f$3)
	SIGMA: &return|->_t$0: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&old_ctx|->@f$2: ; 
&ctx|->@f$2:
	FOOTPRINT PI: @f$2 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->@f$2: ; 
&$RET_context_deinit{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->@f$3:

POST:
	PI: @f$2 != 0 ;  @f$1 != 0 ;  FREEDma<CRYPTO_free:244>(@f$2) ;  UND<context_deinit>:243(@f$4)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&old_ctx|->@f$2: ; 
&ctx|->@f$2:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->@f$2: ; 
&$RET_context_deinit{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->@f$4: ; 
@f$2|->@f$3:
@.	PI: @f$3 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  UND<context_deinit>:243(@f$4)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&old_ctx|->@f$3: ; 
&ctx|->@f$3:
	FOOTPRINT PI: @f$3 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&ctx|->@f$3: ; 
&$RET_context_deinit{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->@f$4:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/context.c":,244:) [line 244]
===================================================================================
PRE:
	PI: n$6 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$0:
	FOOTPRINT PI: @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->@f$1: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:

POST:
	PI: @f$1 != 0 ;  0 != &#GB$default_context_int ;  MEMma<CRYPTO_zalloc:189>(&#GB$default_context_int)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$default_context_int|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&ctx|->&#GB$default_context_int: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 != 0 ;  0 != &#GB$default_context_int
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$allow_customize|->@f$1: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  n$6 != &#GB$default_context_int ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$1:
	FOOTPRINT PI: @f$3 = 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:189>(n$6) ;  UND<pthread_getspecific>:154(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$3:
	FOOTPRINT PI: @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&#GB$allow_customize|->@f$4: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$3:
	FOOTPRINT PI: @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&#GB$allow_customize|->@f$4: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  n$6 != &#GB$default_context_int ;  @f$0 != 0 ;  FREEDma<OSSL_LIB_CTX_free:192>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$allow_customize|->@f$0: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$3 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_zalloc:189>(n$6) ;  UND<pthread_getspecific>:154(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&#GB$allow_customize|->@f$3: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$3 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&#GB$allow_customize|->@f$3: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$2 != 0 ;  @f$1 != 0 ;  FREEDma<OSSL_LIB_CTX_free:192>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:

SIL INSN:_fun_OSSL_LIB_CTX_free(n$6:) [line 192]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  UND<OSSL_LIB_CTX_new>:93(@f$1)
	SIGMA: &testprovmd|->0: ; 
&testprov|->0: ; 
&return|->_t$0: ; 
&res|->0: ; 
&old_propsorder|->@f$0: ; 
&propsorder|->@f$0: ; 
&libctx|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$bio_err|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$6|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$47|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$42|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$37|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$30|->_t$3: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$25|->_t$4: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$5: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->_t$6:
	FOOTPRINT PI: @f$1 != 0
	FOOTPRINT SIGMA: &propsorder|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$bio_err|->0: ; 
&$RET_OSSL_LIB_CTX_new|abducedRetvar|->@f$1:

POST:
	PI: 0 != &#GB$default_context_int ;  UND<OSSL_LIB_CTX_new>:93(&#GB$default_context_int)
	SIGMA: &testprovmd|->0: ; 
&testprov|->0: ; 
&return|->_t$0: ; 
&res|->0: ; 
&old_propsorder|->@f$0: ; 
&propsorder|->@f$0: ; 
&libctx|->&#GB$default_context_int: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$bio_err|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$6|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$47|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$42|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$37|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$30|->_t$3: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$25|->_t$4: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$5: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->_t$6:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 = &#GB$default_context_int ;  @f$1 != 0 ;  0 != &#GB$default_context_int
	FOOTPRINT SIGMA: &propsorder|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$bio_err|->0: ; 
&$RET_OSSL_LIB_CTX_new|abducedRetvar|->@f$1:
@.	PI: @f$1 != 0 ;  @f$1 != &#GB$default_context_int ;  FREEDma<OSSL_LIB_CTX_free:124>(@f$1) ;  UND<OSSL_LIB_CTX_new>:93(@f$1)
	SIGMA: &testprovmd|->0: ; 
&testprov|->0: ; 
&return|->_t$0: ; 
&res|->0: ; 
&old_propsorder|->@f$0: ; 
&propsorder|->@f$0: ; 
&libctx|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$bio_err|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$6|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$47|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$42|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$37|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$30|->_t$3: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$25|->_t$4: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$5: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->_t$6:
	FOOTPRINT PI: @f$3 = 0 ;  @f$1 != 0 ;  @f$1 != &#GB$default_context_int
	FOOTPRINT SIGMA: &propsorder|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$bio_err|->0: ; 
&$RET_OSSL_LIB_CTX_new|abducedRetvar|->@f$1: ; 
@f$1|->@f$2:
@.	PI: @f$4 != 0 ;  @f$1 != 0 ;  UND<pthread_getspecific>:154(@f$1)
	SIGMA: &testprovmd|->0: ; 
&testprov|->0: ; 
&return|->_t$0: ; 
&res|->0: ; 
&old_propsorder|->@f$0: ; 
&propsorder|->@f$0: ; 
&libctx|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4: ; 
&#GB$bio_err|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$6|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$47|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$42|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$37|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$30|->_t$3: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$25|->_t$4: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$5: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->_t$6: ; 
@f$1|->@f$2:
	FOOTPRINT PI: @f$4 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &propsorder|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4: ; 
&#GB$bio_err|->0: ; 
&$RET_OSSL_LIB_CTX_new|abducedRetvar|->@f$1: ; 
@f$1|->@f$2:
@.	PI: @f$4 != 0 ;  @f$1 != 0 ;  UND<OSSL_LIB_CTX_new>:93(@f$1)
	SIGMA: &testprovmd|->0: ; 
&testprov|->0: ; 
&return|->_t$0: ; 
&res|->0: ; 
&old_propsorder|->@f$0: ; 
&propsorder|->@f$0: ; 
&libctx|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4: ; 
&#GB$bio_err|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$6|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$47|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$42|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$37|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$30|->_t$3: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$25|->_t$4: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$5: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->_t$6: ; 
@f$1|->@f$2:
	FOOTPRINT PI: @f$4 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &propsorder|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4: ; 
&#GB$bio_err|->0: ; 
&$RET_OSSL_LIB_CTX_new|abducedRetvar|->@f$1: ; 
@f$1|->@f$2:
@.	PI: @f$3 != 0 ;  @f$1 != 0 ;  FREEDma<OSSL_LIB_CTX_free:124>(@f$1) ;  UND<OSSL_LIB_CTX_new>:93(@f$1)
	SIGMA: &testprovmd|->0: ; 
&testprov|->0: ; 
&return|->_t$0: ; 
&res|->0: ; 
&old_propsorder|->@f$0: ; 
&propsorder|->@f$0: ; 
&libctx|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
&#GB$bio_err|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$6|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$47|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$42|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$37|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$30|->_t$3: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$25|->_t$4: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$5: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->_t$6:
	FOOTPRINT PI: @f$3 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &propsorder|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
&#GB$bio_err|->0: ; 
&$RET_OSSL_LIB_CTX_new|abducedRetvar|->@f$1: ; 
@f$1|->@f$4:

SIL INSN:_fun_OSSL_LIB_CTX_free(n$1:) [line 124]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: (-1 < @f$2) ;  (@f$2 <= 256) ;  n$1 != 0 ;  0 != 256 ;  MEMma<CRYPTO_malloc:717>(n$1) ;  UND<RAND_bytes_ex>:373(_t$2) ;  UND<__function_pointer__>:712(_t$3) ;  UND<asn1_item_print_ctx>:131(_t$1)
	SIGMA: &return|->_t$0: ; 
&ret|->_t$1: ; 
&old_package|->@f$0: ; 
&package|->0: ; 
&o|->n$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&i|->0: ; 
&#GB$default_pctx|->{flags:@f$3}: ; 
&#GB$bio_err|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$12|->0: ; 
@f$0|->{asn1_type:@f$1, encode_expectations_elem_size:@f$2}: ; 
n$1|->[256|]:[256]
	FOOTPRINT PI: @f$6 = 0 ;  @f$5 = _fun_CRYPTO_malloc ;  (-1 < @f$2) ;  (@f$2 <= 256) ;  0 != 256
	FOOTPRINT SIGMA: &package|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$default_pctx|->{flags:@f$3}: ; 
&#GB$bio_err|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$0|->{asn1_type:@f$1, encode_expectations_elem_size:@f$2}:

POST:
	PI: (-1 < @f$2) ;  (@f$2 <= 256) ;  n$1 != 0 ;  0 != 256 ;  FREEDma<CRYPTO_free:723>(n$1) ;  UND<RAND_bytes_ex>:373(_t$2) ;  UND<__function_pointer__>:712(_t$3) ;  UND<asn1_item_print_ctx>:131(_t$1)
	SIGMA: &return|->_t$0: ; 
&ret|->_t$1: ; 
&old_package|->@f$0: ; 
&package|->0: ; 
&o|->n$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&i|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_pctx|->{flags:@f$3}: ; 
&#GB$bio_err|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$12|->0: ; 
@f$0|->{asn1_type:@f$1, encode_expectations_elem_size:@f$2}:
	FOOTPRINT PI: @f$7 = _fun_CRYPTO_free ;  @f$6 = 0 ;  @f$5 = _fun_CRYPTO_malloc ;  (-1 < @f$2) ;  (@f$2 <= 256) ;  0 != 256
	FOOTPRINT SIGMA: &package|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_pctx|->{flags:@f$3}: ; 
&#GB$bio_err|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$0|->{asn1_type:@f$1, encode_expectations_elem_size:@f$2}:
@.	PI: (-1 < @f$2) ;  (@f$2 <= 256) ;  n$1 != 0 ;  @f$3 != _fun_CRYPTO_free ;  0 != 256 ;  MEMma<CRYPTO_malloc:717>(n$1) ;  UND<RAND_bytes_ex>:373(_t$2) ;  UND<__function_pointer__>:712(_t$3) ;  UND<asn1_item_print_ctx>:131(_t$1)
	SIGMA: &return|->_t$0: ; 
&ret|->_t$1: ; 
&old_package|->@f$0: ; 
&package|->0: ; 
&o|->n$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&i|->0: ; 
&#GB$free_impl|->@f$3: ; 
&#GB$default_pctx|->{flags:@f$4}: ; 
&#GB$bio_err|->@f$5: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$12|->0: ; 
@f$0|->{asn1_type:@f$1, encode_expectations_elem_size:@f$2}: ; 
n$1|->[256|]:[256]
	FOOTPRINT PI: @f$7 = 0 ;  @f$6 = _fun_CRYPTO_malloc ;  (-1 < @f$2) ;  (@f$2 <= 256) ;  @f$3 != _fun_CRYPTO_free ;  0 != 256
	FOOTPRINT SIGMA: &package|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$3: ; 
&#GB$default_pctx|->{flags:@f$4}: ; 
&#GB$bio_err|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->{asn1_type:@f$1, encode_expectations_elem_size:@f$2}:

SIL INSN:_fun_CRYPTO_free(n$1:,"test/asn1_encode_test.c":,723:) [line 723]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$14 != 0 ;  @f$6 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_zalloc:33>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_kdf|->@f$0: ; 
&kdf|->0: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$5}:
	FOOTPRINT PI: @f$6 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&kdf|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

POST:
	PI: n$14 != 0 ;  @f$5 != 0 ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:40>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_kdf|->@f$0: ; 
&kdf|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&kdf|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$5: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
@.	PI: n$14 != 0 ;  @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  @f$0 != 0 ;  MEMma<CRYPTO_zalloc:33>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_kdf|->@f$0: ; 
&kdf|->0: ; 
&#GB$free_impl|->@f$5: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$6}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&kdf|->@f$0: ; 
&#GB$free_impl|->@f$5: ; 
&#GB$allow_customize|->@f$7: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$14:,"crypto/evp/kdf_lib.c":,40:) [line 40]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$1 != -1 ;  @f$0 != 0 ;  UND<init_get_thread_local>:232(@f$0)
	SIGMA: &return|->_t$0: ; 
&hands|->@f$0: ; 
&#GB$destructor_key|->{sane:@f$1}:
	FOOTPRINT PI: @f$1 != -1
	FOOTPRINT SIGMA: &#GB$destructor_key|->{sane:@f$1}: ; 
&$RET_init_get_thread_local{087479a7bdec7a94182a0e24b0fc364a}|abducedRetvar|->@f$0:

POST:
	PI: @f$1 != -1 ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:236>(@f$0) ;  UND<init_get_thread_local>:232(@f$0)
	SIGMA: &return|->_t$0: ; 
&hands|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$destructor_key|->{sane:@f$1}:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$1 != -1 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$destructor_key|->{sane:@f$1}: ; 
&$RET_init_get_thread_local{087479a7bdec7a94182a0e24b0fc364a}|abducedRetvar|->@f$0: ; 
@f$0|->@f$2:
@.	PI: @f$2 != -1 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<init_get_thread_local>:232(@f$0)
	SIGMA: &return|->_t$0: ; 
&hands|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$destructor_key|->{sane:@f$2}:
	FOOTPRINT PI: @f$2 != -1 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->@f$1: ; 
&#GB$destructor_key|->{sane:@f$2}: ; 
&$RET_init_get_thread_local{087479a7bdec7a94182a0e24b0fc364a}|abducedRetvar|->@f$0:

SIL INSN:_fun_CRYPTO_free(n$1:,"crypto/initthread.c":,236:) [line 236]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&#GB$global_engine_lock|->@f$0: ; 
&#GB$cleanup_stack|->0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &#GB$global_engine_lock|->@f$0: ; 
&#GB$cleanup_stack|->0:

POST:
	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &return|->_t$0: ; 
&#GB$global_engine_lock|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$cleanup_stack|->0:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$global_engine_lock|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$cleanup_stack|->0:
@.	PI: @f$0 != 0 ;  FREEDma<CRYPTO_THREAD_lock_free:171>(@f$0)
	SIGMA: &return|->_t$0: ; 
&#GB$global_engine_lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$cleanup_stack|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$global_engine_lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$cleanup_stack|->0: ; 
@f$0|->@f$1:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&#GB$global_engine_lock|->0: ; 
&#GB$cleanup_stack|->0:
	FOOTPRINT PI: @f$0 = 0
	FOOTPRINT SIGMA: &#GB$global_engine_lock|->@f$0: ; 
&#GB$cleanup_stack|->0:

SIL INSN:_fun_CRYPTO_THREAD_lock_free(n$0:) [line 171]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<EVP_MAC_free:47>(@f$1)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_ctx|->@f$0: ; 
&ctx|->@f$0: ; 
@f$0|->{algctx:0, meth:@f$1}:
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->@f$0: ; 
@f$0|->{algctx:@f$2, meth:@f$1}: ; 
@f$1|->{freectx:@f$3, lock:@f$4, prov:@f$5, type_name:@f$6}: ; 
@f$4|->@f$8: ; 
@f$6|->@f$7:

POST:
	PI: @f$2 != 0 ;  @f$0 != 0 ;  FREEDma<EVP_MAC_free:47>(@f$2) ;  FREEDma<CRYPTO_free:48>(@f$0)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_ctx|->@f$0: ; 
&ctx|->@f$0:
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->@f$0: ; 
@f$0|->{algctx:@f$1, meth:@f$2}: ; 
@f$2|->{freectx:@f$3, lock:@f$4, prov:@f$5, type_name:@f$6}: ; 
@f$4|->@f$8: ; 
@f$6|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/mac_lib.c":,48:) [line 48]
===================================================================================
PRE:
	PI: n$14 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$5}:
	FOOTPRINT PI: @f$6 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

POST:
	PI: n$14 != 0 ;  @f$5 != 0 ;  FREEDma<CRYPTO_free:32>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$5: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
@.	PI: n$14 != 0 ;  @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->@f$5: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$6}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->@f$5: ; 
&#GB$allow_customize|->@f$7: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$14:,"crypto/evp/mac_lib.c":,32:) [line 32]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:261>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$0:,n$1:,n$2:) [line 261]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->@f$1: ; 
&old_len|->@f$1: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$1: ; 
&num|->0: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<CRYPTO_clear_free:226>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->@f$1: ; 
&old_len|->@f$1: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = 0 ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$1: ; 
&num|->0: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$3: ; 
@f$0|->@f$4:
@.	PI: @f$3 != _fun_CRYPTO_free ;  @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->@f$1: ; 
&old_len|->@f$1: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&#GB$free_impl|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4:
	FOOTPRINT PI: @f$5 = 0 ;  @f$3 != _fun_CRYPTO_free ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$1: ; 
&num|->0: ; 
&line|->@f$2: ; 
&#GB$free_impl|->@f$3: ; 
&file|->@f$4:
@.	PI: @f$0 != 0 ;  FREEDma<CRYPTO_clear_free:226>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = 0 ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$4: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = 0 ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$4: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_clear_free(n$22:,n$23:,n$24:,n$25:) [line 226]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:261>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$0:,n$1:,n$2:) [line 261]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: (-1 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  _t$1 != 0 ;  @f$2 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->@f$3: ; 
&old_len|->@f$3: ; 
&old_num|->@f$2: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&old_file|->@f$5: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1] ; 
_t$1|->[@f$2|]:[@f$2]
	FOOTPRINT PI: @f$7 = 0 ;  @f$6 = _fun_CRYPTO_malloc ;  (-1 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$3: ; 
&num|->@f$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$4: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1]

POST:
	PI: (0 < @f$2) ;  ((@f$2 - @f$5) <= 0) ;  ((@f$2 - @f$1) <= 0) ;  _t$1 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1) ;  FREEDma<CRYPTO_clear_free:239>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->@f$2: ; 
&old_len|->@f$2: ; 
&old_num|->@f$1: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
&#GB$allow_customize|->0: ; 
_t$1|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  (0 < @f$2) ;  ((@f$2 - @f$5) <= 0) ;  ((@f$2 - @f$1) <= 0) ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$2: ; 
&num|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$5|0:@f$6]:[@f$5]
@.	PI: (0 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  _t$1 != 0 ;  @f$5 != _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->@f$3: ; 
&old_len|->@f$3: ; 
&old_num|->@f$2: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&#GB$free_impl|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1] ; 
_t$1|->[@f$2|]:[@f$2]
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  (0 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  @f$5 != _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$3: ; 
&num|->@f$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$4: ; 
&#GB$free_impl|->@f$5: ; 
&file|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1]
@.	PI: (-1 < @f$4) ;  (0 < @f$1) ;  _t$1 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1) ;  FREEDma<CRYPTO_clear_free:239>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->@f$1: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
&#GB$allow_customize|->0: ; 
_t$1|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  (-1 < @f$6) ;  (-1 < @f$4) ;  (0 < @f$1) ;  ((@f$6 - @f$4) <= 0) ;  ((@f$6 - @f$1) <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$6: ; 
&num|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$3: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$4|0:@f$5]:[@f$4]
@.	PI: (-1 < @f$1) ;  (0 < @f$2) ;  _t$1 != 0 ;  @f$4 != _fun_CRYPTO_free ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->@f$2: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&#GB$free_impl|->@f$4: ; 
&old_file|->@f$5: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1] ; 
_t$1|->[@f$2|]:[@f$2]
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  (-1 < @f$6) ;  (-1 < @f$1) ;  (0 < @f$2) ;  ((@f$6 - @f$2) <= 0) ;  ((@f$6 - @f$1) <= 0) ;  @f$4 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$6: ; 
&num|->@f$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$3: ; 
&#GB$free_impl|->@f$4: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:_fun_CRYPTO_clear_free(n$2:,n$3:,n$4:,n$5:) [line 239]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$2 != 0 ;  @f$1 != 0 ;  UND<context_deinit>:243(@f$3)
	SIGMA: &return|->_t$0: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&old_ctx|->@f$2: ; 
&ctx|->@f$2:
	FOOTPRINT PI: @f$2 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->@f$2: ; 
&$RET_context_deinit{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->@f$3:

POST:
	PI: @f$2 != 0 ;  @f$1 != 0 ;  FREEDma<CRYPTO_free:244>(@f$2) ;  UND<context_deinit>:243(@f$4)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&old_ctx|->@f$2: ; 
&ctx|->@f$2:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->@f$2: ; 
&$RET_context_deinit{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->@f$4: ; 
@f$2|->@f$3:
@.	PI: @f$3 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  UND<context_deinit>:243(@f$4)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&old_ctx|->@f$3: ; 
&ctx|->@f$3:
	FOOTPRINT PI: @f$3 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&ctx|->@f$3: ; 
&$RET_context_deinit{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->@f$4:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/context.c":,244:) [line 244]
===================================================================================
PRE:
	PI: n$6 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$0:
	FOOTPRINT PI: @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->@f$1: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:

POST:
	PI: @f$1 != 0 ;  0 != &#GB$default_context_int ;  MEMma<CRYPTO_zalloc:189>(&#GB$default_context_int)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$default_context_int|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&ctx|->&#GB$default_context_int: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 != 0 ;  0 != &#GB$default_context_int
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$allow_customize|->@f$1: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  n$6 != &#GB$default_context_int ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$1:
	FOOTPRINT PI: @f$3 = 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:189>(n$6) ;  UND<pthread_getspecific>:154(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$3:
	FOOTPRINT PI: @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&#GB$allow_customize|->@f$4: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$3:
	FOOTPRINT PI: @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
&#GB$allow_customize|->@f$4: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  n$6 != &#GB$default_context_int ;  @f$0 != 0 ;  FREEDma<OSSL_LIB_CTX_free:192>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
&#GB$allow_customize|->@f$0: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$3 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_zalloc:189>(n$6) ;  UND<pthread_getspecific>:154(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&#GB$allow_customize|->@f$3: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$3 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_zalloc:189>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0: ; 
n$6|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&#GB$allow_customize|->@f$3: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:
@.	PI: n$6 != 0 ;  @f$2 != 0 ;  @f$1 != 0 ;  FREEDma<OSSL_LIB_CTX_free:192>(n$6)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&ctx|->n$6: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$2|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_context_init{a9752daa3f2512f903c041e1c790f8f8}|abducedRetvar|->0:

SIL INSN:_fun_OSSL_LIB_CTX_free(n$6:) [line 192]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: (@f$6 <= 0) ;  _t$2 != 0 ;  n$18 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:636>(n$18) ;  UND<RAND_bytes_ex>:643(@f$6)
	SIGMA: &return|->_t$0: ; 
&old_osslcb|->@f$0: ; 
&osslcb|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&key|->n$18: ; 
&i|->_t$1: ; 
&old_genctx|->@f$2: ; 
&genctx|->0: ; 
&gctx|->0: ; 
&old_cbarg|->@f$5: ; 
&cbarg|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$2|->{libctx:@f$3, selection:@f$4}: ; 
n$18|->@f$1:
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  (@f$6 <= 0) ;  @f$9 != 0 ;  0 != sizeof()
	FOOTPRINT SIGMA: &osslcb|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&genctx|->@f$2: ; 
&cbarg|->@f$5: ; 
&#GB$allow_customize|->0: ; 
&$RET_RAND_bytes_ex|abducedRetvar|->@f$6: ; 
@f$2|->{libctx:@f$3, selection:@f$4}:

POST:
	PI: (@f$5 <= 0) ;  _t$2 != 0 ;  n$18 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:644>(n$18) ;  UND<RAND_bytes_ex>:643(@f$5)
	SIGMA: &return|->_t$0: ; 
&old_osslcb|->@f$0: ; 
&osslcb|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&key|->n$18: ; 
&i|->_t$1: ; 
&old_genctx|->@f$1: ; 
&genctx|->0: ; 
&gctx|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_cbarg|->@f$4: ; 
&cbarg|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$1|->{libctx:@f$2, selection:@f$3}:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  @f$7 = 0 ;  @f$6 = _fun_CRYPTO_malloc ;  (@f$5 <= 0) ;  @f$9 != 0 ;  0 != sizeof()
	FOOTPRINT SIGMA: &osslcb|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&genctx|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&cbarg|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&$RET_RAND_bytes_ex|abducedRetvar|->@f$5: ; 
@f$1|->{libctx:@f$2, selection:@f$3}:
@.	PI: (@f$7 <= 0) ;  _t$2 != 0 ;  n$18 != 0 ;  @f$5 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:636>(n$18) ;  UND<RAND_bytes_ex>:643(@f$7)
	SIGMA: &return|->_t$0: ; 
&old_osslcb|->@f$0: ; 
&osslcb|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&key|->n$18: ; 
&i|->_t$1: ; 
&old_genctx|->@f$2: ; 
&genctx|->0: ; 
&gctx|->0: ; 
&#GB$free_impl|->@f$5: ; 
&old_cbarg|->@f$6: ; 
&cbarg|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$2|->{libctx:@f$3, selection:@f$4}: ; 
n$18|->@f$1:
	FOOTPRINT PI: @f$9 = 0 ;  @f$8 = _fun_CRYPTO_malloc ;  (@f$7 <= 0) ;  @f$10 != 0 ;  @f$5 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &osslcb|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&genctx|->@f$2: ; 
&#GB$free_impl|->@f$5: ; 
&cbarg|->@f$6: ; 
&#GB$allow_customize|->0: ; 
&$RET_RAND_bytes_ex|abducedRetvar|->@f$7: ; 
@f$2|->{libctx:@f$3, selection:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$18:,"test/tls-provider.c":,644:) [line 644]
===================================================================================
PRE:
	PI: n$4 != 0 ;  @f$1 != _fun_CRYPTO_malloc ;  UND<__function_pointer__>:169(n$4)
	SIGMA: &old_vfromkey|->0: ; 
&vfromkey|->0: ; 
&tokey|->n$4: ; 
&old_selection|->@f$0: ; 
&selection|->@f$0: ; 
&return|->_t$1: ; 
&ok|->0: ; 
&#GB$malloc_impl|->@f$1: ; 
&fromkey|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$4|->[_t$0|]:[_t$0]
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_malloc
	FOOTPRINT SIGMA: &vfromkey|->0: ; 
&selection|->@f$0: ; 
&#GB$malloc_impl|->@f$1:

POST:
	PI: n$4 != 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$1 != _fun_CRYPTO_malloc ;  UND<__function_pointer__>:169(n$4)
	SIGMA: &old_vfromkey|->0: ; 
&vfromkey|->0: ; 
&tokey|->n$4: ; 
&old_selection|->@f$0: ; 
&selection|->@f$0: ; 
&return|->_t$1: ; 
&ok|->0: ; 
&#GB$malloc_impl|->@f$1: ; 
&fromkey|->0: ; 
&#GB$free_impl|->@f$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$4|->[_t$0|]:[_t$0]
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$1 != _fun_CRYPTO_malloc
	FOOTPRINT SIGMA: &vfromkey|->0: ; 
&selection|->@f$0: ; 
&#GB$malloc_impl|->@f$1: ; 
&#GB$free_impl|->@f$2:
@.	PI: n$4 != 0 ;  @f$1 != _fun_CRYPTO_malloc ;  FREEDma<xor_freedata:507>(n$4) ;  UND<__function_pointer__>:169(n$4)
	SIGMA: &old_vfromkey|->0: ; 
&vfromkey|->0: ; 
&tokey|->n$4: ; 
&old_selection|->@f$0: ; 
&selection|->@f$0: ; 
&return|->_t$0: ; 
&ok|->0: ; 
&#GB$malloc_impl|->@f$1: ; 
&fromkey|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 != _fun_CRYPTO_malloc
	FOOTPRINT SIGMA: &vfromkey|->0: ; 
&selection|->@f$0: ; 
&#GB$malloc_impl|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

SIL INSN:_fun_xor_freedata(n$4:) [line 507]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&old_pxorctx|->@f$0: ; 
&pxorctx|->@f$0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &pxorctx|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:287>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_pxorctx|->@f$0: ; 
&pxorctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &pxorctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free
	SIGMA: &return|->_t$0: ; 
&old_pxorctx|->@f$0: ; 
&pxorctx|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &pxorctx|->@f$0: ; 
&#GB$free_impl|->@f$1:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&old_pxorctx|->0: ; 
&pxorctx|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$1 = _fun_CRYPTO_free ;  @f$0 = 0
	FOOTPRINT SIGMA: &pxorctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

SIL INSN:_fun_CRYPTO_free(n$0:,"test/tls-provider.c":,287:) [line 287]
===================================================================================
PRE:
	PI: @f$4 != 0 ;  @f$0 != 0 ;  FREEDma<OSSL_LIB_CTX_free:787>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->0: ; 
&i|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$dummy_group_names|->[@f$1|0:@f$2]: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4:
	FOOTPRINT PI: @f$4 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$dummy_group_names|->[@f$1|0:@f$2]: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4: ; 
@f$0|->@f$5:

POST:
	PI: @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:790>(@f$2) ;  FREEDma<OSSL_LIB_CTX_free:787>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->0: ; 
&i|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$dummy_group_names|->[@f$1|0:@f$2]: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4:
	FOOTPRINT PI: @f$4 != 0 ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$dummy_group_names|->[@f$1|0:@f$2]: ; 
&#GB$default_context_thread_local|->@f$3: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$4: ; 
@f$0|->@f$5: ; 
@f$2|->@f$6:
@.	PI: @f$3 != 0 ;  @f$0 != 0 ;  FREEDma<OSSL_LIB_CTX_free:787>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->0: ; 
&i|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$dummy_group_names|->[@f$1|0:0]: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3:
	FOOTPRINT PI: @f$5 = 0 ;  @f$3 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$dummy_group_names|->[@f$1|0:@f$5]: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
@f$0|->@f$4:

SIL INSN:_fun_CRYPTO_free(n$4:,"test/tls-provider.c":,790:) [line 790]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&old_keydata|->@f$0: ; 
&keydata|->@f$0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &keydata|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:461>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_keydata|->@f$0: ; 
&keydata|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &keydata|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free
	SIGMA: &return|->_t$0: ; 
&old_keydata|->@f$0: ; 
&keydata|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &keydata|->@f$0: ; 
&#GB$free_impl|->@f$1:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&old_keydata|->0: ; 
&keydata|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$1 = _fun_CRYPTO_free ;  @f$0 = 0
	FOOTPRINT SIGMA: &keydata|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

SIL INSN:_fun_CRYPTO_free(n$0:,"test/tls-provider.c":,461:) [line 461]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$9 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_malloc ;  @f$3 != 0 ;  UND<xor_gen_init>:358(@f$5)
	SIGMA: &old_vpxorctx|->@f$0: ; 
&vpxorctx|->0: ; 
&old_sslen|->@f$2: ; 
&sslen|->@f$2: ; 
&old_ss|->@f$3: ; 
&ss|->@f$3: ; 
&rv|->0: ; 
&return|->_t$0: ; 
&pxorctx|->0: ; 
&ourkey|->0: ; 
&#GB$malloc_impl|->@f$4: ; 
&genctx|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&derivectx|->0: ; 
&old_ctlen|->@f$8: ; 
&ctlen|->@f$8: ; 
&old_ct|->@f$9: ; 
&ct|->@f$9: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$5|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$16|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$3: ; 
@f$0|->{provctx:@f$1}: ; 
@f$5|->{libctx:@f$6, selection:@f$7}:
	FOOTPRINT PI: @f$9 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_malloc ;  @f$3 != 0
	FOOTPRINT SIGMA: &vpxorctx|->@f$0: ; 
&sslen|->@f$2: ; 
&ss|->@f$3: ; 
&#GB$malloc_impl|->@f$4: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctlen|->@f$8: ; 
&ct|->@f$9: ; 
&$RET_xor_gen_init{2616ad965bd3ad9a9ae5dee453f20045}|abducedRetvar|->@f$5: ; 
@f$0|->{provctx:@f$1}: ; 
@f$5|->{libctx:@f$6, selection:@f$7}:

POST:
	PI: @f$7 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_malloc ;  @f$3 != 0 ;  FREEDma<xor_gen_cleanup:380>(@f$5) ;  UND<xor_gen_init>:358(@f$5)
	SIGMA: &old_vpxorctx|->@f$0: ; 
&vpxorctx|->0: ; 
&old_sslen|->@f$2: ; 
&sslen|->@f$2: ; 
&old_ss|->@f$3: ; 
&ss|->@f$3: ; 
&rv|->0: ; 
&return|->_t$0: ; 
&pxorctx|->0: ; 
&ourkey|->0: ; 
&#GB$malloc_impl|->@f$4: ; 
&genctx|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&derivectx|->0: ; 
&old_ctlen|->@f$6: ; 
&ctlen|->@f$6: ; 
&old_ct|->@f$7: ; 
&ct|->@f$7: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$5|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$16|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$3: ; 
@f$0|->{provctx:@f$1}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_malloc ;  @f$3 != 0
	FOOTPRINT SIGMA: &vpxorctx|->@f$0: ; 
&sslen|->@f$2: ; 
&ss|->@f$3: ; 
&#GB$malloc_impl|->@f$4: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctlen|->@f$6: ; 
&ct|->@f$7: ; 
&$RET_xor_gen_init{2616ad965bd3ad9a9ae5dee453f20045}|abducedRetvar|->@f$5: ; 
@f$0|->{provctx:@f$1}: ; 
@f$5|->{libctx:@f$8, selection:@f$9}:

SIL INSN:_fun_xor_gen_cleanup(n$3:) [line 380]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &provctx|->@f$0:

POST:
	PI: 
	SIGMA: &return|->_t$0: ; 
&old_provctx|->0: ; 
&provctx|->0: ; 
&i|->_t$1:
	FOOTPRINT PI: @f$0 = 0
	FOOTPRINT SIGMA: &provctx|->@f$0:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&old_provctx|->&#GB$default_context_int: ; 
&provctx|->&#GB$default_context_int: ; 
&i|->_t$1: ; 
&#GB$default_context_do_init_ossl_ret_|->0:
	FOOTPRINT PI: @f$1 = 0 ;  @f$0 = &#GB$default_context_int
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$default_context_do_init_ossl_ret_|->0:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  @f$0 != &#GB$default_context_int
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->0:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  @f$0 != &#GB$default_context_int
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->0:
@.	PI: @f$3 != 0 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_getspecific>:154(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3:
	FOOTPRINT PI: @f$3 != 0 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3:
@.	PI: @f$3 != 0 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3:
	FOOTPRINT PI: @f$3 != 0 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3:
@.	PI: @f$0 != 0 ;  @f$0 != &#GB$default_context_int ;  FREEDma<OSSL_LIB_CTX_free:787>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0:
	FOOTPRINT PI: @f$3 = 0 ;  @f$2 = _fun_CRYPTO_free ;  @f$0 != 0 ;  @f$0 != &#GB$default_context_int
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_do_init_ossl_ret_|->0: ; 
@f$0|->@f$1:
@.	PI: @f$3 != 0 ;  @f$0 != 0 ;  UND<pthread_getspecific>:154(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
@f$0|->@f$1:
@.	PI: @f$3 != 0 ;  @f$0 != 0
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$2: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$3: ; 
@f$0|->@f$1:
@.	PI: @f$2 != 0 ;  @f$0 != 0 ;  FREEDma<OSSL_LIB_CTX_free:787>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_provctx|->@f$0: ; 
&provctx|->@f$0: ; 
&i|->_t$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &provctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$default_context_thread_local|->@f$1: ; 
&#GB$default_context_do_init_ossl_ret_|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_OSSL_LIB_CTX_free(n$5:) [line 787]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&old_genctx|->@f$0: ; 
&genctx|->@f$0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &genctx|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:734>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_genctx|->@f$0: ; 
&genctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &genctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free
	SIGMA: &return|->_t$0: ; 
&old_genctx|->@f$0: ; 
&genctx|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &genctx|->@f$0: ; 
&#GB$free_impl|->@f$1:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&old_genctx|->0: ; 
&genctx|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$1 = _fun_CRYPTO_free ;  @f$0 = 0
	FOOTPRINT SIGMA: &genctx|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

SIL INSN:_fun_CRYPTO_free(n$0:,"test/tls-provider.c":,734:) [line 734]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: (@f$5 <= 1023) ;  @f$3 != 0 ;  @f$2 != 0 ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->@f$6: ; 
&old_args|->@f$7: ; 
&args|->@f$7: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}:
	FOOTPRINT PI: @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$2 != 0
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$7: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$6], err_data_flags:[16|@f$4:@f$8], err_data_size:[16|@f$4:@f$5], top:@f$4}:

POST:
	PI: (@f$6 <= 1023) ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$1 != _fun_CRYPTO_realloc ;  UND<__function_pointer__>:203(n$37) ;  UND<ossl_err_get_state_int>:58(@f$4)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->@f$1: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&old_lib|->@f$2: ; 
&lib|->@f$2: ; 
&i|->0: ; 
&old_fmt|->@f$3: ; 
&fmt|->@f$3: ; 
&flags|->0: ; 
&es|->@f$4: ; 
&buf_size|->@f$6: ; 
&buf|->@f$7: ; 
&old_args|->@f$8: ; 
&args|->@f$8: ; 
@f$4|->{err_data:[16|@f$5:0], err_data_flags:[16|@f$5:0], err_data_size:[16|@f$5:@f$6], top:@f$5}:
	FOOTPRINT PI: @f$5 = @f$5 ;  (@f$6 <= 1023) ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$1 != _fun_CRYPTO_realloc
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->@f$1: ; 
&lib|->@f$2: ; 
&fmt|->@f$3: ; 
&args|->@f$8: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$4: ; 
@f$4|->{err_data:[16|@f$5:@f$7], err_data_flags:[16|@f$5:@f$9], err_data_size:[16|@f$5:@f$6], top:@f$5}:
@.	PI: (@f$5 <= 1023) ;  n$37 != 0 ;  @f$6 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  MEMma<CRYPTO_realloc:85>(n$37) ;  FREEDma<CRYPTO_realloc:85>(@f$6) ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->@f$6: ; 
&old_args|->@f$7: ; 
&args|->@f$7: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
n$37|->[1024|]:[1024]
	FOOTPRINT PI: @f$10 = _fun_CRYPTO_realloc ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$6 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$7: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$6], err_data_flags:[16|@f$4:@f$8], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
@f$6|->[@f$9|]:[@f$9]
@.	PI: (@f$5 <= 1023) ;  @f$6 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->@f$6: ; 
&old_args|->@f$7: ; 
&args|->@f$7: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
@f$6|->[1024|]:[@f$9]
	FOOTPRINT PI: @f$10 = _fun_CRYPTO_realloc ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$6 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$7: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$6], err_data_flags:[16|@f$4:@f$8], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
@f$6|->[@f$9|]:[@f$9]
@.	PI: (@f$5 <= 1023) ;  @f$6 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->@f$6: ; 
&old_args|->@f$8: ; 
&args|->@f$8: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
@f$6|->[@f$7|]:[@f$7]
	FOOTPRINT PI: @f$10 = _fun_CRYPTO_realloc ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$6 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$8: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$6], err_data_flags:[16|@f$4:@f$9], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
@f$6|->[@f$7|]:[@f$7]
@.	PI: (@f$6 <= 1023) ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$1 != _fun_CRYPTO_malloc ;  UND<__function_pointer__>:169(n$37) ;  UND<ossl_err_get_state_int>:58(@f$4)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&#GB$malloc_impl|->@f$1: ; 
&old_lib|->@f$2: ; 
&lib|->@f$2: ; 
&i|->0: ; 
&old_fmt|->@f$3: ; 
&fmt|->@f$3: ; 
&flags|->0: ; 
&es|->@f$4: ; 
&buf_size|->@f$6: ; 
&buf|->0: ; 
&old_args|->@f$7: ; 
&args|->@f$7: ; 
@f$4|->{err_data:[16|@f$5:0], err_data_flags:[16|@f$5:0], err_data_size:[16|@f$5:@f$6], top:@f$5}:
	FOOTPRINT PI: @f$10 = _fun_CRYPTO_realloc ;  @f$8 = 0 ;  @f$5 = @f$5 ;  (@f$6 <= 1023) ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$1 != _fun_CRYPTO_malloc
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&#GB$malloc_impl|->@f$1: ; 
&lib|->@f$2: ; 
&fmt|->@f$3: ; 
&args|->@f$7: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$4: ; 
@f$4|->{err_data:[16|@f$5:@f$8], err_data_flags:[16|@f$5:@f$9], err_data_size:[16|@f$5:@f$6], top:@f$5}:
@.	PI: (@f$5 <= 1023) ;  @f$7 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  MEMma<CRYPTO_realloc:85>(n$37) ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->0: ; 
&old_args|->@f$6: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
n$37|->[1024|]:[1024]
	FOOTPRINT PI: @f$11 = _fun_CRYPTO_malloc ;  @f$10 = _fun_CRYPTO_realloc ;  @f$8 = 0 ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$7 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$8], err_data_flags:[16|@f$4:@f$9], err_data_size:[16|@f$4:@f$5], top:@f$4}:
@.	PI: (@f$5 <= 1023) ;  @f$7 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->0: ; 
&old_args|->@f$6: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}:
	FOOTPRINT PI: @f$11 = _fun_CRYPTO_malloc ;  @f$10 = _fun_CRYPTO_realloc ;  @f$8 = 0 ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$7 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$8], err_data_flags:[16|@f$4:@f$9], err_data_size:[16|@f$4:@f$5], top:@f$4}:
@.	PI: (@f$5 <= 1023) ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  MEMma<CRYPTO_realloc:85>(n$37) ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->0: ; 
&old_args|->@f$6: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}: ; 
n$37|->[1024|]:[1024]
	FOOTPRINT PI: @f$11 = 0 ;  @f$10 = _fun_CRYPTO_malloc ;  @f$9 = _fun_CRYPTO_realloc ;  @f$7 = 0 ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->0: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$7], err_data_flags:[16|@f$4:@f$8], err_data_size:[16|@f$4:@f$5], top:@f$4}:
@.	PI: (@f$5 <= 1023) ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024 ;  UND<ossl_err_get_state_int>:58(@f$3)
	SIGMA: &return|->_t$0: ; 
&old_reason|->@f$0: ; 
&reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&rbuf|->0: ; 
&printed_len|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_lib|->@f$1: ; 
&lib|->@f$1: ; 
&i|->0: ; 
&old_fmt|->@f$2: ; 
&fmt|->@f$2: ; 
&flags|->0: ; 
&es|->@f$3: ; 
&buf_size|->@f$5: ; 
&buf|->0: ; 
&old_args|->@f$6: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{err_data:[16|@f$4:0], err_data_flags:[16|@f$4:0], err_data_size:[16|@f$4:@f$5], top:@f$4}:
	FOOTPRINT PI: @f$11 = 0 ;  @f$10 = _fun_CRYPTO_malloc ;  @f$9 = _fun_CRYPTO_realloc ;  @f$7 = 0 ;  @f$4 = @f$4 ;  (@f$5 <= 1023) ;  @f$3 != 0 ;  @f$2 != 0 ;  0 != 1024
	FOOTPRINT SIGMA: &reason|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lib|->@f$1: ; 
&fmt|->@f$2: ; 
&args|->@f$6: ; 
&#GB$allow_customize|->0: ; 
&$RET_ossl_err_get_state_int|abducedRetvar|->@f$3: ; 
@f$3|->{err_data:[16|@f$4:@f$7], err_data_flags:[16|@f$4:@f$8], err_data_size:[16|@f$4:@f$5], top:@f$4}:

SIL INSN:n$37=_fun_CRYPTO_realloc(n$36:,1024:,"crypto/err/err_blocks.c":,85:) [line 85]
===================================================================================
PRE:
	PI: n$21 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$1 != 0 ;  MEMma<CRYPTO_strdup:166>(n$21)
	SIGMA: &old_v|->@f$0: ; 
&v|->@f$0: ; 
&return|->_t$0: ; 
&newname|->n$21: ; 
&newdesc|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_data|->@f$2: ; 
&data|->0: ; 
&#GB$allow_customize|->0: ; 
@f$2|->{desc:@f$3, object_type:1, utf8_data:@f$4}: ; 
@f$3|->[0|]:[0] ; 
@f$4|->[@f$1|]:[@f$1] ; 
n$21|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$1 != 0
	FOOTPRINT SIGMA: &v|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&data|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
@f$2|->{desc:@f$3, object_type:1, utf8_data:@f$4}: ; 
@f$3|->[0|]:[0] ; 
@f$4|->[@f$1|]:[@f$1]

POST:
	PI: n$21 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:170>(n$21)
	SIGMA: &old_v|->@f$0: ; 
&v|->@f$0: ; 
&return|->_t$0: ; 
&newname|->n$21: ; 
&newdesc|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_data|->@f$1: ; 
&data|->0: ; 
&#GB$allow_customize|->0: ; 
@f$1|->{desc:@f$2, object_type:1, utf8_data:@f$3}: ; 
@f$2|->[0|]:[0] ; 
@f$3|->[@f$4|]:[@f$4]
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &v|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&data|->@f$1: ; 
&#GB$allow_customize|->@f$5: ; 
@f$1|->{desc:@f$2, object_type:1, utf8_data:@f$3}: ; 
@f$2|->[0|]:[0] ; 
@f$3|->[@f$4|]:[@f$4]
@.	PI: n$21 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$1 != 0 ;  MEMma<CRYPTO_strdup:166>(n$21)
	SIGMA: &old_v|->@f$0: ; 
&v|->@f$0: ; 
&return|->_t$0: ; 
&newname|->n$21: ; 
&newdesc|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$2: ; 
&old_data|->@f$3: ; 
&data|->0: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{desc:@f$4, object_type:1, utf8_data:@f$5}: ; 
@f$4|->[0|]:[0] ; 
@f$5|->[@f$1|]:[@f$1] ; 
n$21|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$1 != 0
	FOOTPRINT SIGMA: &v|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$2: ; 
&data|->@f$3: ; 
&#GB$allow_customize|->@f$6: ; 
@f$3|->{desc:@f$4, object_type:1, utf8_data:@f$5}: ; 
@f$4|->[0|]:[0] ; 
@f$5|->[@f$1|]:[@f$1]

SIL INSN:_fun_CRYPTO_free(n$21:,"crypto/store/store_result.c":,170:) [line 170]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&old_format|->@f$4: ; 
&format|->0: ; 
&dynbuf|->@f$5: ; 
&old_bio|->@f$6: ; 
&bio|->@f$6: ; 
&old_args|->@f$7: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &format|->@f$4: ; 
&bio|->@f$6: ; 
&args|->@f$7: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->0: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$5:

POST:
	PI: @f$5 != 0 ;  FREEDma<CRYPTO_free:892>(@f$5)
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_format|->@f$4: ; 
&format|->0: ; 
&dynbuf|->@f$5: ; 
&old_bio|->@f$6: ; 
&bio|->@f$6: ; 
&old_args|->@f$7: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$5 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&format|->@f$4: ; 
&bio|->@f$6: ; 
&args|->@f$7: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->0: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$5: ; 
@f$5|->@f$8:
@.	PI: @f$4 != _fun_CRYPTO_free
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&#GB$free_impl|->@f$4: ; 
&old_format|->@f$5: ; 
&format|->0: ; 
&dynbuf|->@f$6: ; 
&old_bio|->@f$7: ; 
&bio|->@f$7: ; 
&old_args|->@f$8: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$free_impl|->@f$4: ; 
&format|->@f$5: ; 
&bio|->@f$7: ; 
&args|->@f$8: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->0: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$6:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_format|->@f$4: ; 
&format|->0: ; 
&dynbuf|->0: ; 
&old_bio|->@f$5: ; 
&bio|->@f$5: ; 
&old_args|->@f$6: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  @f$7 = 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&format|->@f$4: ; 
&bio|->@f$5: ; 
&args|->@f$6: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->0: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/bio/b_print.c":,892:) [line 892]
===================================================================================
PRE:
	PI: (-1 < @f$0) ;  (_t$1 <= 0) ;  @f$8 != 0 ;  @f$5 != 0 ;  UND<_dopr>:890(@f$8) ;  UND<bio_write_intern>:379(_t$1)
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&old_format|->@f$4: ; 
&format|->0: ; 
&dynbuf|->@f$5: ; 
&old_bio|->@f$6: ; 
&bio|->0: ; 
&old_args|->@f$7: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: (-1 < @f$0) ;  @f$8 != 0 ;  @f$5 != 0
	FOOTPRINT SIGMA: &format|->@f$4: ; 
&bio|->@f$6: ; 
&args|->@f$7: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->@f$8: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$5:

POST:
	PI: (-1 < @f$0) ;  (_t$1 <= 0) ;  @f$8 != 0 ;  @f$5 != 0 ;  FREEDma<CRYPTO_free:897>(@f$5) ;  UND<_dopr>:890(@f$8) ;  UND<bio_write_intern>:379(_t$1)
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_format|->@f$4: ; 
&format|->0: ; 
&dynbuf|->@f$5: ; 
&old_bio|->@f$6: ; 
&bio|->0: ; 
&old_args|->@f$7: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: @f$10 = _fun_CRYPTO_free ;  (-1 < @f$0) ;  @f$8 != 0 ;  @f$5 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&format|->@f$4: ; 
&bio|->@f$6: ; 
&args|->@f$7: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->@f$8: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$5: ; 
@f$5|->@f$9:
@.	PI: (-1 < @f$0) ;  (_t$1 <= 0) ;  @f$9 != 0 ;  @f$6 != 0 ;  @f$4 != _fun_CRYPTO_free ;  UND<_dopr>:890(@f$9) ;  UND<bio_write_intern>:379(_t$1)
	SIGMA: &return|->_t$0: ; 
&retlen|->@f$0: ; 
&ret|->_t$1: ; 
&ignored|->@f$1: ; 
&hugebufsize|->@f$2: ; 
&hugebufp|->@f$3: ; 
&hugebuf|->[2048|]: ; 
&#GB$free_impl|->@f$4: ; 
&old_format|->@f$5: ; 
&format|->0: ; 
&dynbuf|->@f$6: ; 
&old_bio|->@f$7: ; 
&bio|->0: ; 
&old_args|->@f$8: ; 
&args|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0:
	FOOTPRINT PI: (-1 < @f$0) ;  @f$9 != 0 ;  @f$6 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$free_impl|->@f$4: ; 
&format|->@f$5: ; 
&bio|->@f$7: ; 
&args|->@f$8: ; 
&$RET__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRetvar|->@f$9: ; 
&retlen|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$0: ; 
&ignored|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$1: ; 
&hugebufsize|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$2: ; 
&hugebufp|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$3: ; 
&dynbuf|$REF_PARAM__dopr{c227518dd22bb40dadfbc0513c5c2d7f}|abducedRefParam|->@f$6:

SIL INSN:_fun_CRYPTO_free(n$2:,"crypto/bio/b_print.c":,897:) [line 897]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:261>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$0:,n$1:,n$2:) [line 261]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:261>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$0:,n$1:,n$2:) [line 261]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_biom|->@f$0: ; 
&biom|->@f$0: ; 
@f$0|->{name:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&biom|->@f$0: ; 
@f$0|->{name:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:54>(@f$0)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_biom|->@f$0: ; 
&biom|->@f$0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&biom|->@f$0: ; 
@f$0|->{name:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$1:,"crypto/bio/bio_meth.c":,54:) [line 54]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&#GB$method_tls_corrupt|->@f$0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &#GB$method_tls_corrupt|->@f$0:

POST:
	PI: 
	SIGMA: &return|->_t$0: ; 
&#GB$method_tls_corrupt|->0:
	FOOTPRINT PI: @f$0 = 0
	FOOTPRINT SIGMA: &#GB$method_tls_corrupt|->@f$0:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &return|->_t$0: ; 
&#GB$method_tls_corrupt|->@f$0: ; 
&#GB$free_impl|->@f$2: ; 
@f$0|->{name:@f$1}:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$method_tls_corrupt|->@f$0: ; 
&#GB$free_impl|->@f$2: ; 
@f$0|->{name:@f$1}:
@.	PI: @f$0 != 0 ;  FREEDma<BIO_meth_free:128>(@f$0)
	SIGMA: &return|->_t$0: ; 
&#GB$method_tls_corrupt|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$method_tls_corrupt|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{name:@f$1}: ; 
@f$1|->@f$2:
@.	PI: @f$0 != 0 ;  FREEDma<BIO_meth_free:128>(@f$0)
	SIGMA: &return|->_t$0: ; 
&#GB$method_tls_corrupt|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$method_tls_corrupt|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{name:0}:

SIL INSN:_fun_BIO_meth_free(n$0:) [line 128]
===================================================================================
PRE:
	PI: n$8 != 0 ;  @f$12 != 0 ;  MEMma<CRYPTO_zalloc:38>(n$8)
	SIGMA: &old_type|->@f$0: ; 
&type|->@f$0: ; 
&return|->_t$0: ; 
&old_name|->0: ; 
&name|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&biom|->n$8: ; 
&#GB$allow_customize|->0: ; 
n$8|->{bgets:@f$1, bputs:@f$2, bread:@f$3, bread_old:@f$4, bwrite:@f$5, bwrite_old:@f$6, callback_ctrl:@f$7, create:@f$8, ctrl:@f$9, destroy:@f$10, name:0, type:@f$11}:
	FOOTPRINT PI: @f$12 != 0
	FOOTPRINT SIGMA: &type|->@f$0: ; 
&name|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->@f$12:

POST:
	PI: n$8 != 0 ;  @f$1 != 0 ;  FREEDma<CRYPTO_free:42>(n$8)
	SIGMA: &old_type|->@f$0: ; 
&type|->@f$0: ; 
&return|->_t$0: ; 
&old_name|->0: ; 
&name|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&biom|->n$8: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 != 0
	FOOTPRINT SIGMA: &type|->@f$0: ; 
&name|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$1:
@.	PI: n$8 != 0 ;  @f$13 != 0 ;  @f$1 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:38>(n$8)
	SIGMA: &old_type|->@f$0: ; 
&type|->@f$0: ; 
&return|->_t$0: ; 
&old_name|->0: ; 
&name|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$1: ; 
&biom|->n$8: ; 
&#GB$allow_customize|->0: ; 
n$8|->{bgets:@f$2, bputs:@f$3, bread:@f$4, bread_old:@f$5, bwrite:@f$6, bwrite_old:@f$7, callback_ctrl:@f$8, create:@f$9, ctrl:@f$10, destroy:@f$11, name:0, type:@f$12}:
	FOOTPRINT PI: @f$13 != 0 ;  @f$1 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &type|->@f$0: ; 
&name|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$allow_customize|->@f$13:

SIL INSN:_fun_CRYPTO_free(n$8:,"crypto/bio/bio_meth.c":,42:) [line 42]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$2 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_malloc:137>(n$2) ;  UND<CRYPTO_ocb128_init>:138(0)
	SIGMA: &old_stream|->@f$0: ; 
&stream|->0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&octx|->n$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_keyenc|->@f$2: ; 
&keyenc|->0: ; 
&old_keydec|->@f$3: ; 
&keydec|->0: ; 
&old_encrypt|->@f$4: ; 
&encrypt|->0: ; 
&old_decrypt|->@f$5: ; 
&decrypt|->0: ; 
&#GB$allow_customize|->0: ; 
n$2|->@f$1:
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  0 != sizeof()
	FOOTPRINT SIGMA: &stream|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&keyenc|->@f$2: ; 
&keydec|->@f$3: ; 
&encrypt|->@f$4: ; 
&decrypt|->@f$5: ; 
&#GB$allow_customize|->0: ; 
&$RET_CRYPTO_ocb128_init|abducedRetvar|->0:

POST:
	PI: n$2 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:142>(n$2) ;  UND<CRYPTO_ocb128_init>:138(0)
	SIGMA: &old_stream|->@f$0: ; 
&stream|->0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&octx|->n$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_keyenc|->@f$1: ; 
&keyenc|->0: ; 
&old_keydec|->@f$2: ; 
&keydec|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_encrypt|->@f$3: ; 
&encrypt|->0: ; 
&old_decrypt|->@f$4: ; 
&decrypt|->0: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  @f$7 = 0 ;  @f$6 = _fun_CRYPTO_malloc ;  @f$5 = 0 ;  0 != sizeof()
	FOOTPRINT SIGMA: &stream|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&keyenc|->@f$1: ; 
&keydec|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&encrypt|->@f$3: ; 
&decrypt|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&$RET_CRYPTO_ocb128_init|abducedRetvar|->0:
@.	PI: n$2 != 0 ;  @f$4 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_malloc:137>(n$2) ;  UND<CRYPTO_ocb128_init>:138(0)
	SIGMA: &old_stream|->@f$0: ; 
&stream|->0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&octx|->n$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_keyenc|->@f$2: ; 
&keyenc|->0: ; 
&old_keydec|->@f$3: ; 
&keydec|->0: ; 
&#GB$free_impl|->@f$4: ; 
&old_encrypt|->@f$5: ; 
&encrypt|->0: ; 
&old_decrypt|->@f$6: ; 
&decrypt|->0: ; 
&#GB$allow_customize|->0: ; 
n$2|->@f$1:
	FOOTPRINT PI: @f$9 = 0 ;  @f$8 = _fun_CRYPTO_malloc ;  @f$7 = 0 ;  @f$4 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &stream|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&keyenc|->@f$2: ; 
&keydec|->@f$3: ; 
&#GB$free_impl|->@f$4: ; 
&encrypt|->@f$5: ; 
&decrypt|->@f$6: ; 
&#GB$allow_customize|->0: ; 
&$RET_CRYPTO_ocb128_init|abducedRetvar|->0:

SIL INSN:_fun_CRYPTO_free(n$2:,"crypto/modes/ocb128.c":,142:) [line 142]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_search|->@f$0: ; 
&search|->@f$0: ; 
&return|->_t$0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &search|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:917>(@f$0)
	SIGMA: &old_search|->@f$0: ; 
&search|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &search|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free
	SIGMA: &old_search|->@f$0: ; 
&search|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &search|->@f$0: ; 
&#GB$free_impl|->@f$1:
@.	PI: 
	SIGMA: &old_search|->0: ; 
&search|->0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$1 = _fun_CRYPTO_free ;  @f$0 = 0
	FOOTPRINT SIGMA: &search|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/store/store_lib.c":,917:) [line 917]
===================================================================================
PRE:
	PI: n$12 != 0 ;  @f$4 != 0 ;  @f$3 != @f$1 ;  @f$2 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:876>(n$12)
	SIGMA: &search|->n$12: ; 
&return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_len|->@f$1: ; 
&len|->0: ; 
&old_digest|->@f$2: ; 
&digest|->0: ; 
&old_bytes|->@f$5: ; 
&bytes|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$2|->{md_size:@f$3, type_name:@f$4}: ; 
n$12|->@f$0:
	FOOTPRINT PI: @f$7 = 0 ;  @f$6 = _fun_CRYPTO_malloc ;  @f$4 != 0 ;  @f$3 != @f$1 ;  @f$2 != 0 ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&len|->@f$1: ; 
&digest|->@f$2: ; 
&bytes|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$2|->{md_size:@f$3, type_name:@f$4}:

POST:
	PI: n$12 != 0 ;  @f$3 != 0 ;  @f$2 != @f$0 ;  @f$1 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:888>(n$12)
	SIGMA: &search|->n$12: ; 
&return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_len|->@f$0: ; 
&len|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_digest|->@f$1: ; 
&digest|->0: ; 
&old_bytes|->@f$4: ; 
&bytes|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$1|->{md_size:@f$2, type_name:@f$3}:
	FOOTPRINT PI: @f$7 = _fun_CRYPTO_free ;  @f$6 = 0 ;  @f$5 = _fun_CRYPTO_malloc ;  @f$3 != 0 ;  @f$2 != @f$0 ;  @f$1 != 0 ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&len|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&digest|->@f$1: ; 
&bytes|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$1|->{md_size:@f$2, type_name:@f$3}:
@.	PI: n$12 != 0 ;  @f$5 != 0 ;  @f$4 != @f$1 ;  @f$3 != 0 ;  @f$2 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:876>(n$12)
	SIGMA: &search|->n$12: ; 
&return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_len|->@f$1: ; 
&len|->0: ; 
&#GB$free_impl|->@f$2: ; 
&old_digest|->@f$3: ; 
&digest|->0: ; 
&old_bytes|->@f$6: ; 
&bytes|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{md_size:@f$4, type_name:@f$5}: ; 
n$12|->@f$0:
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$5 != 0 ;  @f$4 != @f$1 ;  @f$3 != 0 ;  @f$2 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&len|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&digest|->@f$3: ; 
&bytes|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$3|->{md_size:@f$4, type_name:@f$5}:

SIL INSN:_fun_CRYPTO_free(n$12:,"crypto/store/store_lib.c":,888:) [line 888]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &return|->_t$0: ; 
&old_p|->@f$0: ; 
&p|->@f$0: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_flags|->@f$2: ; 
&flags|->0:
	FOOTPRINT PI: @f$3 = 0
	FOOTPRINT SIGMA: &p|->@f$0: ; 
&num|->@f$1: ; 
&flags|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:226>(@f$0)
	SIGMA: &return|->_t$0: ; 
&old_p|->@f$0: ; 
&p|->@f$0: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_flags|->@f$2: ; 
&flags|->0:
	FOOTPRINT PI: @f$5 = 0 ;  @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &p|->@f$0: ; 
&num|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&flags|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free
	SIGMA: &return|->_t$0: ; 
&old_p|->@f$0: ; 
&p|->@f$0: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_flags|->@f$3: ; 
&flags|->0:
	FOOTPRINT PI: @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &p|->@f$0: ; 
&num|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&flags|->@f$3:
@.	PI: 
	SIGMA: &return|->_t$0: ; 
&old_p|->0: ; 
&p|->0: ; 
&old_num|->@f$0: ; 
&num|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_flags|->@f$1: ; 
&flags|->0:
	FOOTPRINT PI: @f$4 = 0 ;  @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &p|->@f$2: ; 
&num|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&flags|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/pem/pem_lib.c":,226:) [line 226]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$14 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$5}:
	FOOTPRINT PI: @f$6 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

POST:
	PI: n$14 != 0 ;  @f$5 != 0 ;  FREEDma<CRYPTO_free:32>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$5: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
@.	PI: n$14 != 0 ;  @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->@f$5: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$6}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->@f$5: ; 
&#GB$allow_customize|->@f$7: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$14:,"crypto/evp/mac_lib.c":,32:) [line 32]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->@f$0: ; 
&return|->_t$0:
	FOOTPRINT PI: @f$2 = 0
	FOOTPRINT SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->@f$1: ; 
&#GB$sec_malloc_lock|->@f$0:

POST:
	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$3 = 0 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&#GB$sec_malloc_lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<CRYPTO_THREAD_lock_free:109>(@f$0)
	SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->@f$1: ; 
&#GB$sec_malloc_lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$2:
@.	PI: 
	SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->0: ; 
&return|->_t$0:
	FOOTPRINT PI: @f$2 = 0 ;  @f$1 = 0
	FOOTPRINT SIGMA: &#GB$secure_mem_used|->0: ; 
&#GB$secure_mem_initialized|->@f$0: ; 
&#GB$sec_malloc_lock|->@f$1:

SIL INSN:_fun_CRYPTO_THREAD_lock_free(n$1:) [line 109]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: n$8 != 0 ;  @f$2 != _fun_CRYPTO_malloc ;  UND<__function_pointer__>:169(n$8)
	SIGMA: &old_size|->0: ; 
&size|->0: ; 
&#GB$sh|->[@f$0|]:[@f$0] ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->n$8: ; 
&return|->_t$1: ; 
&ret|->0: ; 
&old_minsize|->@f$1: ; 
&minsize|->0: ; 
&#GB$malloc_impl|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$8|->[_t$0|]:[_t$0]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$3 = 0 ;  @f$2 != _fun_CRYPTO_malloc
	FOOTPRINT SIGMA: &size|->@f$3: ; 
&#GB$sh|->[@f$0|]:[@f$0] ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->@f$4: ; 
&minsize|->@f$1: ; 
&#GB$malloc_impl|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

POST:
	PI: n$8 != 0 ;  @f$2 != _fun_CRYPTO_malloc ;  FREEDma<CRYPTO_THREAD_lock_free:92>(n$8) ;  UND<__function_pointer__>:169(n$8)
	SIGMA: &old_size|->0: ; 
&size|->0: ; 
&#GB$sh|->[@f$0|]:[@f$0] ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->n$8: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_minsize|->@f$1: ; 
&minsize|->0: ; 
&#GB$malloc_impl|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$3 = 0 ;  @f$2 != _fun_CRYPTO_malloc
	FOOTPRINT SIGMA: &size|->@f$3: ; 
&#GB$sh|->[@f$0|]:[@f$0] ; 
&#GB$secure_mem_initialized|->0: ; 
&#GB$sec_malloc_lock|->@f$4: ; 
&minsize|->@f$1: ; 
&#GB$malloc_impl|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free:

SIL INSN:_fun_CRYPTO_THREAD_lock_free(n$8:) [line 92]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&old_file|->@f$5: ; 
&file|->@f$5: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&line|->@f$4: ; 
&file|->@f$5:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:165>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$5: ; 
&file|->@f$5: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$7 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&line|->@f$4: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$5: ; 
@f$3|->@f$6:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$5 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&#GB$free_impl|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$5 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&line|->@f$4: ; 
&#GB$free_impl|->@f$5: ; 
&file|->@f$6:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 165]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$1 != -1 ;  @f$0 != 0 ;  UND<init_get_thread_local>:232(@f$0)
	SIGMA: &return|->_t$0: ; 
&hands|->@f$0: ; 
&#GB$destructor_key|->{sane:@f$1}:
	FOOTPRINT PI: @f$1 != -1
	FOOTPRINT SIGMA: &#GB$destructor_key|->{sane:@f$1}: ; 
&$RET_init_get_thread_local{087479a7bdec7a94182a0e24b0fc364a}|abducedRetvar|->@f$0:

POST:
	PI: @f$1 != -1 ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:236>(@f$0) ;  UND<init_get_thread_local>:232(@f$0)
	SIGMA: &return|->_t$0: ; 
&hands|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$destructor_key|->{sane:@f$1}:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$1 != -1 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$destructor_key|->{sane:@f$1}: ; 
&$RET_init_get_thread_local{087479a7bdec7a94182a0e24b0fc364a}|abducedRetvar|->@f$0: ; 
@f$0|->@f$2:
@.	PI: @f$2 != -1 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<init_get_thread_local>:232(@f$0)
	SIGMA: &return|->_t$0: ; 
&hands|->@f$0: ; 
&#GB$free_impl|->@f$1: ; 
&#GB$destructor_key|->{sane:@f$2}:
	FOOTPRINT PI: @f$2 != -1 ;  @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->@f$1: ; 
&#GB$destructor_key|->{sane:@f$2}: ; 
&$RET_init_get_thread_local{087479a7bdec7a94182a0e24b0fc364a}|abducedRetvar|->@f$0:

SIL INSN:_fun_CRYPTO_free(n$1:,"crypto/initthread.c":,236:) [line 236]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: val$1 != 0 ;  FREEDma<CRYPTO_THREAD_lock_free:220>(val$1)
	SIGMA: &old_set_err_thread_local|->0: ; 
&#GB$set_err_thread_local|->0: ; 
&return|->_t$0: ; 
&old_int_error_hash|->0: ; 
&#GB$int_error_hash|->0: ; 
&old_free_impl|->_fun_CRYPTO_free: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_err_string_lock|->val$1: ; 
&#GB$err_string_lock|->0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: 

POST:
	PI: val$1 != 0 ;  FREEDma<CRYPTO_THREAD_lock_free:220>(val$1)
	SIGMA: &old_set_err_thread_local|->0: ; 
&#GB$set_err_thread_local|->0: ; 
&return|->_t$0: ; 
&old_int_error_hash|->0: ; 
&#GB$int_error_hash|->0: ; 
&old_free_impl|->_fun_CRYPTO_free: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_err_string_lock|->val$1: ; 
&#GB$err_string_lock|->0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: 

SIL INSN:_fun_OPENSSL_LH_free(n$1:) [line 222]
===================================================================================
PRE:
	PI: 
	SIGMA: &#GB$set_err_thread_local|->0: ; 
&return|->_t$0: ; 
&#GB$err_string_lock|->@f$0:
	FOOTPRINT PI: 
	FOOTPRINT SIGMA: &#GB$set_err_thread_local|->0: ; 
&#GB$err_string_lock|->@f$0:

POST:
	PI: @f$1 != 0 ;  @f$0 != _fun_CRYPTO_free
	SIGMA: &#GB$set_err_thread_local|->0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$err_string_lock|->@f$1:
	FOOTPRINT PI: @f$1 != 0 ;  @f$0 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$set_err_thread_local|->0: ; 
&#GB$free_impl|->@f$0: ; 
&#GB$err_string_lock|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<CRYPTO_THREAD_lock_free:220>(@f$0)
	SIGMA: &#GB$set_err_thread_local|->0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$err_string_lock|->@f$0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$set_err_thread_local|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$err_string_lock|->@f$0: ; 
@f$0|->@f$1:
@.	PI: 
	SIGMA: &#GB$set_err_thread_local|->0: ; 
&return|->_t$0: ; 
&#GB$err_string_lock|->0:
	FOOTPRINT PI: @f$0 = 0
	FOOTPRINT SIGMA: &#GB$set_err_thread_local|->0: ; 
&#GB$err_string_lock|->@f$0:

SIL INSN:_fun_CRYPTO_THREAD_lock_free(n$2:) [line 220]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<EVP_MAC_free:47>(@f$1)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_ctx|->@f$0: ; 
&ctx|->@f$0: ; 
@f$0|->{algctx:0, meth:@f$1}:
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->@f$0: ; 
@f$0|->{algctx:@f$2, meth:@f$1}: ; 
@f$1|->{freectx:@f$3, lock:@f$4, prov:@f$5, type_name:@f$6}: ; 
@f$4|->@f$8: ; 
@f$6|->@f$7:

POST:
	PI: @f$2 != 0 ;  @f$0 != 0 ;  FREEDma<EVP_MAC_free:47>(@f$2) ;  FREEDma<CRYPTO_free:48>(@f$0)
	SIGMA: &return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_ctx|->@f$0: ; 
&ctx|->@f$0:
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->@f$0: ; 
@f$0|->{algctx:@f$1, meth:@f$2}: ; 
@f$2|->{freectx:@f$3, lock:@f$4, prov:@f$5, type_name:@f$6}: ; 
@f$4|->@f$8: ; 
@f$6|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/mac_lib.c":,48:) [line 48]
===================================================================================
PRE:
	PI: n$14 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$5}:
	FOOTPRINT PI: @f$6 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

POST:
	PI: n$14 != 0 ;  @f$5 != 0 ;  FREEDma<CRYPTO_free:32>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$5: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
@.	PI: n$14 != 0 ;  @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->@f$5: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$6}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->@f$5: ; 
&#GB$allow_customize|->@f$7: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$14:,"crypto/evp/mac_lib.c":,32:) [line 32]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$4 != 0 ;  @f$5 != 0 ;  MEMma<CRYPTO_malloc:143>(n$4) ;  UND<EC_POINT_point2oct>:140(@f$5) ;  UND<EC_POINT_point2oct>:147(0)
	SIGMA: &return|->_t$0: ; 
&old_point|->@f$0: ; 
&point|->0: ; 
&old_pbuf|->@f$1: ; 
&pbuf|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&len|->0: ; 
&old_group|->@f$2: ; 
&group|->0: ; 
&old_form|->@f$3: ; 
&form|->0: ; 
&old_ctx|->@f$4: ; 
&ctx|->0: ; 
&buf|->n$4: ; 
&#GB$allow_customize|->0: ; 
n$4|->[@f$5|]:[@f$5]
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  @f$5 != 0
	FOOTPRINT SIGMA: &point|->@f$0: ; 
&pbuf|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&group|->@f$2: ; 
&form|->@f$3: ; 
&ctx|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&$RET_EC_POINT_point2oct|abducedRetvar|->0: ; 
&$RET_EC_POINT_point2oct|abducedRetvar|->@f$5:

POST:
	PI: n$4 != 0 ;  @f$5 != 0 ;  FREEDma<CRYPTO_free:149>(n$4) ;  UND<EC_POINT_point2oct>:140(@f$5) ;  UND<EC_POINT_point2oct>:147(0)
	SIGMA: &return|->_t$0: ; 
&old_point|->@f$0: ; 
&point|->0: ; 
&old_pbuf|->@f$1: ; 
&pbuf|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&len|->0: ; 
&old_group|->@f$2: ; 
&group|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_form|->@f$3: ; 
&form|->0: ; 
&old_ctx|->@f$4: ; 
&ctx|->0: ; 
&buf|->n$4: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  @f$5 != 0
	FOOTPRINT SIGMA: &point|->@f$0: ; 
&pbuf|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&group|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&form|->@f$3: ; 
&ctx|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&$RET_EC_POINT_point2oct|abducedRetvar|->0: ; 
&$RET_EC_POINT_point2oct|abducedRetvar|->@f$5:
@.	PI: n$4 != 0 ;  @f$6 != 0 ;  @f$3 != _fun_CRYPTO_free ;  MEMma<CRYPTO_malloc:143>(n$4) ;  UND<EC_POINT_point2oct>:140(@f$6) ;  UND<EC_POINT_point2oct>:147(0)
	SIGMA: &return|->_t$0: ; 
&old_point|->@f$0: ; 
&point|->0: ; 
&old_pbuf|->@f$1: ; 
&pbuf|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&len|->0: ; 
&old_group|->@f$2: ; 
&group|->0: ; 
&#GB$free_impl|->@f$3: ; 
&old_form|->@f$4: ; 
&form|->0: ; 
&old_ctx|->@f$5: ; 
&ctx|->0: ; 
&buf|->n$4: ; 
&#GB$allow_customize|->0: ; 
n$4|->[@f$6|]:[@f$6]
	FOOTPRINT PI: @f$9 = 0 ;  @f$8 = _fun_CRYPTO_malloc ;  @f$7 = 0 ;  @f$6 != 0 ;  @f$3 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &point|->@f$0: ; 
&pbuf|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&group|->@f$2: ; 
&#GB$free_impl|->@f$3: ; 
&form|->@f$4: ; 
&ctx|->@f$5: ; 
&#GB$allow_customize|->0: ; 
&$RET_EC_POINT_point2oct|abducedRetvar|->0: ; 
&$RET_EC_POINT_point2oct|abducedRetvar|->@f$6:

SIL INSN:_fun_CRYPTO_free(n$4:,"crypto/ec/ec_oct.c":,149:) [line 149]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$14 != 0 ;  @f$6 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_zalloc:33>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_kdf|->@f$0: ; 
&kdf|->0: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$5}:
	FOOTPRINT PI: @f$6 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&kdf|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

POST:
	PI: n$14 != 0 ;  @f$5 != 0 ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:40>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_kdf|->@f$0: ; 
&kdf|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&kdf|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$5: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
@.	PI: n$14 != 0 ;  @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  @f$0 != 0 ;  MEMma<CRYPTO_zalloc:33>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_kdf|->@f$0: ; 
&kdf|->0: ; 
&#GB$free_impl|->@f$5: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$6}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&kdf|->@f$0: ; 
&#GB$free_impl|->@f$5: ; 
&#GB$allow_customize|->@f$7: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$14:,"crypto/evp/kdf_lib.c":,40:) [line 40]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->@f$1: ; 
&old_len|->@f$1: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$1: ; 
&num|->0: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<CRYPTO_clear_free:226>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->@f$1: ; 
&old_len|->@f$1: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = 0 ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$1: ; 
&num|->0: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$3: ; 
@f$0|->@f$4:
@.	PI: @f$3 != _fun_CRYPTO_free ;  @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->@f$1: ; 
&old_len|->@f$1: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&#GB$free_impl|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4:
	FOOTPRINT PI: @f$5 = 0 ;  @f$3 != _fun_CRYPTO_free ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$1: ; 
&num|->0: ; 
&line|->@f$2: ; 
&#GB$free_impl|->@f$3: ; 
&file|->@f$4:
@.	PI: @f$0 != 0 ;  FREEDma<CRYPTO_clear_free:226>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = 0 ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$4: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->0: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = 0 ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$4: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_clear_free(n$22:,n$23:,n$24:,n$25:) [line 226]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:261>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$0:,n$1:,n$2:) [line 261]
===================================================================================
PRE:
	PI: (-1 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  _t$1 != 0 ;  @f$2 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->@f$3: ; 
&old_len|->@f$3: ; 
&old_num|->@f$2: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&old_file|->@f$5: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1] ; 
_t$1|->[@f$2|]:[@f$2]
	FOOTPRINT PI: @f$7 = 0 ;  @f$6 = _fun_CRYPTO_malloc ;  (-1 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$3: ; 
&num|->@f$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$4: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1]

POST:
	PI: (0 < @f$2) ;  ((@f$2 - @f$5) <= 0) ;  ((@f$2 - @f$1) <= 0) ;  _t$1 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1) ;  FREEDma<CRYPTO_clear_free:239>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->@f$2: ; 
&old_len|->@f$2: ; 
&old_num|->@f$1: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
&#GB$allow_customize|->0: ; 
_t$1|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  (0 < @f$2) ;  ((@f$2 - @f$5) <= 0) ;  ((@f$2 - @f$1) <= 0) ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$2: ; 
&num|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$4: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$5|0:@f$6]:[@f$5]
@.	PI: (0 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  _t$1 != 0 ;  @f$5 != _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->@f$3: ; 
&old_len|->@f$3: ; 
&old_num|->@f$2: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$4: ; 
&line|->@f$4: ; 
&#GB$free_impl|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1] ; 
_t$1|->[@f$2|]:[@f$2]
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  (0 < @f$3) ;  ((@f$3 - @f$2) <= 0) ;  ((@f$3 - @f$1) <= 0) ;  @f$5 != _fun_CRYPTO_free ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$3: ; 
&num|->@f$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$4: ; 
&#GB$free_impl|->@f$5: ; 
&file|->@f$6: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1]
@.	PI: (-1 < @f$4) ;  (0 < @f$1) ;  _t$1 != 0 ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1) ;  FREEDma<CRYPTO_clear_free:239>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->@f$1: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
&#GB$allow_customize|->0: ; 
_t$1|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$9 = _fun_CRYPTO_free ;  @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  (-1 < @f$6) ;  (-1 < @f$4) ;  (0 < @f$1) ;  ((@f$6 - @f$4) <= 0) ;  ((@f$6 - @f$1) <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$6: ; 
&num|->@f$1: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$3: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$4|0:@f$5]:[@f$4]
@.	PI: (-1 < @f$1) ;  (0 < @f$2) ;  _t$1 != 0 ;  @f$4 != _fun_CRYPTO_free ;  @f$0 != 0 ;  MEMma<CRYPTO_malloc:236>(_t$1)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&ret|->_t$1: ; 
&old_old_len|->0: ; 
&old_len|->0: ; 
&old_num|->@f$2: ; 
&num|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&#GB$free_impl|->@f$4: ; 
&old_file|->@f$5: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1] ; 
_t$1|->[@f$2|]:[@f$2]
	FOOTPRINT PI: @f$8 = 0 ;  @f$7 = _fun_CRYPTO_malloc ;  @f$6 = 0 ;  (-1 < @f$6) ;  (-1 < @f$1) ;  (0 < @f$2) ;  ((@f$6 - @f$2) <= 0) ;  ((@f$6 - @f$1) <= 0) ;  @f$4 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&old_len|->@f$6: ; 
&num|->@f$2: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&line|->@f$3: ; 
&#GB$free_impl|->@f$4: ; 
&file|->@f$5: ; 
&#GB$allow_customize|->0: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:_fun_CRYPTO_clear_free(n$2:,n$3:,n$4:,n$5:) [line 239]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_vtest|->@f$0: ; 
&vtest|->0: ; 
&t|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{entropy:0, lock:0, nonce:0}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  @f$2 = 0 ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &vtest|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{entropy:@f$1, lock:@f$2, nonce:@f$3}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:77>(@f$0)
	SIGMA: &old_vtest|->@f$0: ; 
&vtest|->0: ; 
&t|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  @f$2 = 0 ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &vtest|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{entropy:@f$1, lock:@f$2, nonce:@f$3}:

SIL INSN:_fun_CRYPTO_free(n$0:,"providers/implementations/rands/test_rng.c":,77:) [line 77]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:261>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$0:,n$1:,n$2:) [line 261]
===================================================================================
PRE:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&file|->@f$6:

POST:
	PI: ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0 ;  FREEDma<CRYPTO_free:190>(@f$3)
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$6: ; 
&file|->@f$6: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: @f$8 = _fun_CRYPTO_free ;  ((@f$0 - @f$3) <= 0) ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$6: ; 
@f$3|->@f$7:
@.	PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&return|->_t$0: ; 
&old_ptr|->@f$3: ; 
&ptr|->@f$3: ; 
&old_num|->@f$4: ; 
&num|->0: ; 
&old_line|->@f$5: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&old_file|->@f$7: ; 
&file|->@f$7: ; 
&actual_size|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$9|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$13|->0:
	FOOTPRINT PI: ((@f$0 - @f$3) <= 0) ;  @f$6 != _fun_CRYPTO_free ;  @f$3 != 0 ;  @f$2 != 0
	FOOTPRINT SIGMA: &#GB$sh|->{arena:@f$0, arena_size:@f$1}: ; 
&#GB$secure_mem_initialized|->@f$2: ; 
&ptr|->@f$3: ; 
&num|->@f$4: ; 
&line|->@f$5: ; 
&#GB$free_impl|->@f$6: ; 
&file|->@f$7:

SIL INSN:_fun_CRYPTO_free(n$17:,n$18:,n$19:) [line 190]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$14 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$5}:
	FOOTPRINT PI: @f$6 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

POST:
	PI: n$14 != 0 ;  @f$5 != 0 ;  FREEDma<CRYPTO_free:32>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$5: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:
@.	PI: n$14 != 0 ;  @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:24>(n$14)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_mac|->@f$0: ; 
&mac|->0: ; 
&#GB$free_impl|->@f$5: ; 
&ctx|->n$14: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->_t$1: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}: ; 
n$14|->{algctx:0, meth:@f$6}:
	FOOTPRINT PI: @f$7 != 0 ;  @f$5 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&mac|->@f$0: ; 
&#GB$free_impl|->@f$5: ; 
&#GB$allow_customize|->@f$7: ; 
@f$0|->{freectx:@f$1, newctx:@f$2, prov:@f$3}: ; 
@f$3|->{provctx:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$14:,"crypto/evp/mac_lib.c":,32:) [line 32]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0:
	FOOTPRINT PI: @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:131>(@f$0) ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->@f$1:
@.	PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0 ;  UND<pthread_rwlock_destroy>:127(_t$1)
	SIGMA: &return|->_t$0: ; 
&old_lock|->@f$0: ; 
&lock|->@f$0: ; 
&#GB$free_impl|->@f$1:
	FOOTPRINT PI: @f$1 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &lock|->@f$0: ; 
&#GB$free_impl|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/threads_pthread.c":,131:) [line 131]
===================================================================================
PRE:
	PI: (@f$2 <= 0) ;  @f$0 != 0 ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$2: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{prov:@f$1, refcnt_lock:0, type_name:0}:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$2 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$2: ; 
@f$0|->{prov:@f$1, refcnt_lock:@f$3, type_name:@f$4}:

POST:
	PI: (@f$1 <= 0) ;  @f$0 != 0 ;  FREEDma<CRYPTO_free:80>(@f$0) ;  UND<CRYPTO_DOWN_REF>:74(@f$5) ;  UND<CRYPTO_DOWN_REF>:74(&ref)
	SIGMA: &old_vrand|->@f$0: ; 
&vrand|->0: ; 
&return|->_t$0: ; 
&ref|->@f$1: ; 
&rand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$4 = 0 ;  @f$3 = 0 ;  (@f$1 <= 0) ;  @f$0 != 0
	FOOTPRINT SIGMA: &vrand|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&$RET_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRetvar|->@f$5: ; 
&ref|$REF_PARAM_CRYPTO_DOWN_REF{189ff2618f36accdb8d00c4d6bd912d5}|abducedRefParam|->@f$1: ; 
@f$0|->{prov:@f$2, refcnt_lock:@f$3, type_name:@f$4}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/evp/evp_rand.c":,80:) [line 80]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$3 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&file|->@f$2:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:210>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$6 = _fun_CRYPTO_free ;  @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:
@.	PI: @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->0: ; 
&num|->0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$4 = 0 ;  @f$2 != _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->@f$2: ; 
&file|->@f$3:

SIL INSN:_fun_CRYPTO_free(n$4:,n$5:,n$6:) [line 210]
===================================================================================
PRE:
	PI: 
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2:

POST:
	PI: 
	SIGMA: &old_str|->0: ; 
&str|->0: ; 
&return|->_t$0: ; 
&old_line|->@f$0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$1: ; 
&file|->@f$1:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  @f$2 = 0
	FOOTPRINT SIGMA: &str|->0: ; 
&line|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$1:
@.	PI: @f$0 != 0 ;  FREEDma<free:252>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&old_line|->@f$1: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_file|->@f$2: ; 
&file|->@f$2:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&line|->@f$1: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&file|->@f$2: ; 
@f$0|->@f$3:

SIL INSN:_fun_free(n$0:) [line 252]
===================================================================================
PRE:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$13 = 0 ;  @f$12 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$allow_customize|->0:

POST:
	PI: _t$1 != 0 ;  n$3 != 0 ;  0 != sizeof() ;  FREEDma<CRYPTO_free:42>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 = _fun_CRYPTO_malloc ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0:
@.	PI: _t$1 != 0 ;  n$3 != 0 ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof() ;  MEMma<CRYPTO_zalloc:36>(n$3) ;  UND<pthread_rwlock_init>:41(_t$1)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&lock|->n$3: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0: ; 
n$3|->{__align:@f$0, __data:{__flags:@f$1, __lock:@f$2, __nr_readers:@f$3, __nr_readers_queued:@f$4, __nr_writers_queued:@f$5, __pad1:[7|], __pad2:@f$6, __readers_wakeup:@f$7, __rwelision:@f$8, __shared:@f$9, __writer:@f$10, __writer_wakeup:@f$11}, __size:[56|]}:
	FOOTPRINT PI: @f$14 = 0 ;  @f$13 = _fun_CRYPTO_malloc ;  @f$12 != _fun_CRYPTO_free ;  0 != sizeof()
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$12: ; 
&#GB$allow_customize|->0:

SIL INSN:_fun_CRYPTO_free(n$3:,"crypto/threads_pthread.c":,42:) [line 42]
===================================================================================
PRE:
	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3:

POST:
	PI: n$2 != 0 ;  @f$1 != 0 ;  @f$0 != 0 ;  MEMma<realloc:214>(n$2) ;  FREEDma<realloc:214>(@f$0)
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
n$2|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$1 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$1: ; 
&num|->@f$1: ; 
&old_line|->@f$2: ; 
&line|->@f$2: ; 
&old_file|->@f$3: ; 
&file|->@f$3: ; 
@f$0|->[@f$1|]:[@f$4]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$1: ; 
&line|->@f$2: ; 
&file|->@f$3: ; 
@f$0|->[@f$4|]:[@f$4]
@.	PI: @f$2 != 0 ;  @f$0 != 0
	SIGMA: &old_str|->@f$0: ; 
&str|->@f$0: ; 
&return|->_t$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&old_num|->@f$2: ; 
&num|->@f$2: ; 
&old_line|->@f$3: ; 
&line|->@f$3: ; 
&old_file|->@f$4: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_realloc ;  @f$2 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &str|->@f$0: ; 
&#GB$realloc_impl|->_fun_CRYPTO_realloc: ; 
&num|->@f$2: ; 
&line|->@f$3: ; 
&file|->@f$4: ; 
@f$0|->[@f$1|]:[@f$1]

SIL INSN:n$2=_fun_realloc(n$0:,n$1:) [line 214]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: @f$0 != 0
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:0}:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

POST:
	PI: @f$0 != 0 ;  FREEDma<CRYPTO_free:415>(@f$0)
	SIGMA: &old_st|->@f$0: ; 
&st|->@f$0: ; 
&return|->_t$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free:
	FOOTPRINT PI: @f$2 = _fun_CRYPTO_free ;  @f$1 = 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &st|->@f$0: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{data:@f$1}:

SIL INSN:_fun_CRYPTO_free(n$0:,"crypto/stack/stack.c":,415:) [line 415]
===================================================================================
PRE:
	PI: n$0 != 0 ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

POST:
	PI: n$0 != 0 ;  @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}: ; 
n$0|->{comp:@f$3, data:0, num:@f$4, num_alloc:@f$5, sorted:@f$6}:
	FOOTPRINT PI: @f$8 != _fun_CRYPTO_free ;  @f$7 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$7: ; 
&#GB$free_impl|->@f$8: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
@.	PI: n$0 != 0 ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0 ;  FREEDma<OPENSSL_sk_free:75>(n$0) ;  UND<__function_pointer__>:169(n$0)
	SIGMA: &old_sk|->@f$0: ; 
&sk|->@f$0: ; 
&return|->_t$0: ; 
&ret|->n$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 != _fun_CRYPTO_malloc ;  @f$1 != 0 ;  @f$0 != 0
	FOOTPRINT SIGMA: &sk|->@f$0: ; 
&#GB$malloc_impl|->@f$3: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
@f$0|->{num:@f$1, num_alloc:@f$2}:

SIL INSN:_fun_OPENSSL_sk_free(n$0:) [line 75]
===================================================================================
PRE:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$6 != 0 ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$6 != 0
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$6: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

POST:
	PI: (0 < @f$5) ;  n$6 != 0 ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:221>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$5: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&old_c|->@f$0: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0: ; 
n$6|->{comp:@f$0, data:@f$1, num:@f$2, num_alloc:@f$3, sorted:@f$4}:
	FOOTPRINT PI: (0 < @f$5) ;  @f$7 != 0 ;  @f$6 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &n|->@f$5: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->@f$6: ; 
&c|->@f$0: ; 
&#GB$allow_customize|->@f$7: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$3 = _fun_CRYPTO_free ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:
@.	PI: (0 < @f$0) ;  n$6 != 0 ;  @f$2 != 0 ;  FREEDma<OPENSSL_sk_free:232>(n$6)
	SIGMA: &st|->n$6: ; 
&return|->_t$0: ; 
&old_n|->@f$0: ; 
&n|->0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&old_c|->@f$1: ; 
&c|->0: ; 
&#GB$allow_customize|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$1|->0:
	FOOTPRINT PI: @f$4 = _fun_CRYPTO_free ;  @f$3 = 0 ;  (0 < @f$0) ;  @f$2 != 0
	FOOTPRINT SIGMA: &n|->@f$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&c|->@f$1: ; 
&#GB$allow_customize|->@f$2: ; 
&$RET_sk_reserve{13f175c8dd316f50c0d8ed604e1e415b}|abducedRetvar|->0:

SIL INSN:_fun_OPENSSL_sk_free(n$6:) [line 232]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
===================================================================================
PRE:
	PI: n$15 != 0 ;  @f$5 != 0 ;  @f$4 != 0 ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$4: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$5 != 0 ;  @f$4 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$allow_customize|->@f$5: ; 
&alloc|->@f$4: ; 
@f$0|->@f$1:

POST:
	PI: n$15 != 0 ;  @f$4 != 0 ;  @f$3 != 0 ;  FREEDma<CRYPTO_free:104>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$3: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1:
	FOOTPRINT PI: @f$5 = _fun_CRYPTO_free ;  @f$4 != 0 ;  @f$3 != 0
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->_fun_CRYPTO_free: ; 
&#GB$allow_customize|->@f$4: ; 
&alloc|->@f$3: ; 
@f$0|->@f$1:
@.	PI: n$15 != 0 ;  @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free ;  MEMma<CRYPTO_zalloc:100>(n$15)
	SIGMA: &return|->_t$0: ; 
&#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&old_local|->@f$0: ; 
&local|->@f$0: ; 
&old_keep|->@f$2: ; 
&keep|->@f$2: ; 
&hands|->n$15: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->0: ; 
&old_alloc|->@f$5: ; 
&alloc|->0: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$3|->_t$1: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$18|->_t$2: ; 
&0$?%__sil_tmpSIL_temp_conditional___n$10|->0: ; 
@f$0|->@f$1: ; 
n$15|->@f$3:
	FOOTPRINT PI: @f$6 != 0 ;  @f$5 != 0 ;  @f$4 != _fun_CRYPTO_free
	FOOTPRINT SIGMA: &#GB$malloc_impl|->_fun_CRYPTO_malloc: ; 
&local|->@f$0: ; 
&keep|->@f$2: ; 
&#GB$free_impl|->@f$4: ; 
&#GB$allow_customize|->@f$6: ; 
&alloc|->@f$5: ; 
@f$0|->@f$1:

SIL INSN:_fun_CRYPTO_free(n$15:,"crypto/initthread.c":,104:) [line 104]
